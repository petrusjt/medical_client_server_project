<Window x:Class="medical_doctor_client.AddDiagnosis"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:medical_doctor_client"
        mc:Ignorable="d"
        Title="AddDiagnosis" Height="700" Width="800"
        Background="#172333">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Aqua"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Lime"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" >
                <Setter.Value>
                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                        <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                <TranslateTransform X="0.01" Y="0.3"/>
                            </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Color="Lime" Offset="0"/>
                        <GradientStop Color="DarkGreen" Offset="0.5"/>
                        <GradientStop Color="Lime" Offset="0.1"/>
                        <GradientStop Color="Lime" Offset="0.7"/>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="Black" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="13" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" >
                <Setter.Value>
                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                        <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                <TranslateTransform X="0.01" Y="0.3"/>
                            </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Color="Red" Offset="0"/>
                        <GradientStop Color="DarkRed" Offset="0.5"/>
                        <GradientStop Color="Red" Offset="0.1"/>
                        <GradientStop Color="Red" Offset="0.7"/>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="Black" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="13" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Label Grid.Column="0" Grid.Row="0" Content="Name" Margin="15,15,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="1" Grid.Row="0" x:Name="NameTextBox" Margin="15,15,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            </TextBox>
            <Label Grid.Column="2" Grid.Row="0" Content="Taj" Margin="15,15,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="3" Grid.Row="0" x:Name="TajTextBox" Margin="15,15,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            </TextBox>
            <Label Grid.Column="4" Grid.Row="0" Content="TimeRegistered" Margin="15,15,15,15" Foreground="CornflowerBlue"></Label>
            <DatePicker Grid.Column="5" Grid.Row="0" x:Name="RegisteredTextBox" Margin="15,15,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            </DatePicker>
            <Label Grid.Column="0" Grid.Row="1" Content="Country" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="1" Grid.Row="1" x:Name="CountryTextBox" Margin="15,0,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
            </TextBox>
            <Label Grid.Column="2" Grid.Row="1" Content="Region" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="3" Grid.Row="1" x:Name="RegionTextBox" Margin="15,0,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            </TextBox>
            <Label Grid.Column="4" Grid.Row="1" Content="City" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="5" Grid.Row="1" x:Name="CityTextBox" Margin="15,0,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            </TextBox>

            <Label Grid.Column="0" Grid.Row="2" Content="Street Name" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="1" Grid.Row="2" x:Name="StreetNameTextBox" Margin="15,0,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
            </TextBox>
            <Label Grid.Column="2" Grid.Row="2" Content="Street Number" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="3" Grid.Row="2" x:Name="StreetNumberTextBox" Margin="15,0,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            </TextBox>
            <Label Grid.Column="4" Grid.Row="2" Content="StaircaseRef" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="5" Grid.Row="2" x:Name="StaircaseRefTextBox" Margin="15,0,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            </TextBox>
            <Label Grid.Column="0" Grid.Row="3" Content="Floor" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="1" Grid.Row="3" x:Name="FloorTextBox" Margin="15,0,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            </TextBox>
            <Label Grid.Column="2" Grid.Row="3" Content="ApartmentNumber" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox Grid.Column="3" Grid.Row="3" x:Name="ApartmentNumberTextBox" Margin="15,0,15,15" IsEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

            </TextBox>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content="Problem:" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox HorizontalAlignment="Left" Height="150" MinWidth="750" Margin="15,0,15,15" Grid.Row="1" VerticalAlignment="Top" Width="auto" IsEnabled="False" x:Name="ProblemBox" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" AcceptsTab="True">
            </TextBox>
            <Label Grid.Row="2" Content="Diagnosis:" Margin="15,0,15,15" Foreground="CornflowerBlue"></Label>
            <TextBox HorizontalAlignment="Left" Height="150" MinWidth="750" Margin="15,0,15,0" Grid.Row="3" VerticalAlignment="Top" Width="auto" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" AcceptsTab="True" x:Name="DiagnosisTextBox">
            </TextBox>

        </Grid>
        <Grid Grid.Row="2">
            <Button Content="Update Diagnosis" HorizontalAlignment="Right" Margin="0,30,30,0" VerticalAlignment="Top" Width="130" Click="Button_Click" Height="40" FontWeight="Bold" Style="{DynamicResource RoundedButton}"/>
            <Button Content="Delete Patient" HorizontalAlignment="Right" Margin="0,30,180,0" VerticalAlignment="Top" Width="130" Height="40" FontWeight="Bold" Style="{DynamicResource DeleteButton}" Click="Button_Click_1"/>
        </Grid>

    </Grid>
</Window>
